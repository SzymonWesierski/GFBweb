@model GameWeb.Models.GamesCreateViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Games</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit"  method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Game.Id" name="Id"/>
            <input type="hidden" asp-for="Game.Created" name="Created" />
            <div class="form-group">
                <label asp-for="Game.Title" class="control-label"></label>
                <input asp-for="Game.Title" class="form-control" name="Title"/>
                <span asp-validation-for="Game.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                Category:
                <div class="form-control">
                    @foreach (var category in Model.GamesCategories)
                    {
                        var isChecked = Model.SelectedCategoryIds.Any(tc => tc == category.Id);
                        <div class="form-check">
                            <input type="checkbox" id="category_@category.Id" name="SelectedCategoryIds" value="@category.Id" class="form-check-input" @(isChecked ? "checked" : "") />
                            <label for="category_@category.Id" class="form-check-label">@category.CategoryName</label>
                        </div>
                    }
                    <span asp-validation-for="SelectedCategoryIds" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}