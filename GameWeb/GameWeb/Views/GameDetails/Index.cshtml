@using Microsoft.AspNetCore.Identity
@using GameWeb.Entities
@using System.Security.Claims

@model GameWeb.Models.DetailsGameViewModel
@inject SignInManager<ApplicationUsers> SignInManager

@{
    ViewData["Title"] = "Szczegóły gry: " + Model.Game.Title;
}

<div class="container mt-5">
    <div class="bg-light p-5 rounded shadow">
        <h1 class="mb-4">
        <button class="btn btn-primary">
            <a class="nav-link text-light" asp-area="" asp-controller="Home" asp-action="Index">
                <i class="bi bi-arrow-90deg-left"></i>
            </a>
        </button>
        &nbsp;&nbsp;@Model.Game.Title
    </h1>

    <div class="row justify-content-between">
        <div class="col-md-5">
                <img src="@Url.Content(Model.Game.MainImagePath)" class="img-fluid" alt="Game Image" style="height: 500px; width: auto; object-fit: cover;">
        </div>

        <div class="col-md-5" >
            <h3 class="mt-3">Ocena: @Math.Round(Model.Game.Rating,2)</h3>
            <h3 class="mt-3">Na ile oceniasz ten tytuł:</h3>
            @if (@Model.Rating.Value != 0)
            {
                <p>Twoja obecna ocena: @Model.Rating.Value</p>
            }
            else
            {
                <p>Nie oceniłeś jeszcze tej gry : )</p>
            }
            @await Html.PartialAsync("_RatingFormPartial", new RatingFormPartialViewModel{GameId = Model.Game.Id, RatingValue = Model.Rating.Value})
        </div>
    </div>

    <div class="col-md-8 p-4 w-100">
        <h3>Opis:</h3>
        <p>@Model.Game.Description</p>

        <h3>Data wydania:</h3>
        <p>@Model.Game.ReleaseDate.ToShortDateString()</p>

        <h3>Kategorie:</h3>
        @{
            string categories = "";
            @foreach (var category in Model.Game.CategoryList)
            {
                categories += category.CategoryName + ", ";
            }
            categories = categories.Substring(0, categories.Length - 2);
        }
        <p>@categories</p>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            @await Html.PartialAsync("_CommentFormPartial", new CommentFormPartialViewModel{GameId = Model.Game.Id, CommentContent = String.Empty})
        </div>
        
        <h3 class="mt-4">Komentarze:</h3>
        @foreach (var comment in Model.Game.CommentsList)
        {
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">@comment.User.UserName</h5>
                    <p class="card-text">@comment.Content</p>
                    @if (User.Identity.IsAuthenticated && comment.User.Id == User.FindFirst(ClaimTypes.NameIdentifier)?.Value)
                    {
                        <a asp-action="EditComment" asp-route-id="@comment.Id" class="btn btn-primary mx-2">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <a asp-action="DeleteComment" asp-route-id="@comment.Id" class="btn btn-danger mx-2">
                            <i class="bi bi-trash-fill"></i>
                        </a>
                    }
                </div>
            </div>
        }
    </div>
    </div>
</div>

<!-- slider -->
<script>
    var ratingSlider = document.getElementById("rating");
    var currentRating = document.getElementById("currentRating");

    ratingSlider.addEventListener("input", function () {
        currentRating.innerText = ratingSlider.value;
    });
</script>